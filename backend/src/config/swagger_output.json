{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "FrontBuild API Documentacion",
    "description": "FrontBuild backend api for creating task and other funcionalidades generated with swagger-jsdoc"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Dev local server"
    }
  ],
  "paths": {
    "/swagger.json": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/tasks/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/tasks/add": {
      "post": {
        "description": "",
        "responses": {
          "201": {
            "description": "Add task response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSuccessResponseSchema"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              },
              "examples": {
                "addTaskExample": {
                  "$ref": "#/components/examples/addTaskExample"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "put": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/labels/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/labels/add": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/labels/delete": {
      "delete": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/status/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/status/add": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/status/delete": {
      "delete": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/priorities/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/priorities/add": {
      "post": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/priorities/delete": {
      "delete": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    }
  },
  "components": {
    "examples": {
      "addTaskExample": {
        "value": {
          "title": "Example Task",
          "status": "pending",
          "label": "work",
          "priority": "high"
        }
      }
    },
    "schemas": {
      "GeneralErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "example": "An error has ocurred"
          }
        },
        "required": [
          "error"
        ]
      },
      "Task": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "asdjasdj123123"
          },
          "title": {
            "type": "string",
            "example": "Create Redux Store"
          },
          "status": {
            "type": "string",
            "example": "todo"
          },
          "label": {
            "type": "string",
            "example": "epic"
          },
          "priority": {
            "type": "string",
            "example": "high"
          }
        },
        "required": [
          "title",
          "status",
          "label",
          "priority"
        ]
      },
      "TaskSuccessResponseSchema": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Task added successfully"
          },
          "task": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "asdjasdj123123"
              },
              "title": {
                "type": "string",
                "example": "Create Redux Store"
              },
              "status": {
                "type": "string",
                "example": "todo"
              },
              "label": {
                "type": "string",
                "example": "epic"
              },
              "priority": {
                "type": "string",
                "example": "high"
              }
            },
            "required": [
              "_id",
              "title",
              "status",
              "label",
              "priority"
            ]
          }
        },
        "required": [
          "message",
          "task"
        ]
      },
      "Label": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "dksl1m2ss"
          },
          "value": {
            "type": "string",
            "example": "epic"
          },
          "label": {
            "type": "string",
            "example": "Epic"
          }
        },
        "required": [
          "value",
          "label"
        ]
      },
      "LabelSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Label added successfully"
          },
          "label": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "sdkaskd2222"
              },
              "value": {
                "type": "string",
                "example": "epic"
              },
              "label": {
                "type": "string",
                "example": "Epic"
              }
            },
            "required": [
              "value",
              "label"
            ]
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "sjsdla222"
          },
          "value": {
            "type": "string",
            "example": "in-progress"
          },
          "label": {
            "type": "string",
            "example": "In-progress"
          }
        },
        "required": [
          "value",
          "label"
        ]
      },
      "StatusSuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Status added successfully"
          },
          "label": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "sjsdla222"
              },
              "value": {
                "type": "string",
                "example": "in-progress"
              },
              "label": {
                "type": "string",
                "example": "In-progress"
              }
            },
            "required": [
              "value",
              "label"
            ]
          }
        }
      },
      "Priority": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "kslak212ss"
          },
          "value": {
            "type": "string",
            "example": "medium"
          },
          "label": {
            "type": "string",
            "example": "Medium"
          }
        },
        "required": [
          "value",
          "label"
        ]
      },
      "PrioritySuccessResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Priority added successfully"
          },
          "label": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "example": "kslak212ss"
              },
              "value": {
                "type": "string",
                "example": "medium"
              },
              "label": {
                "type": "string",
                "example": "Medium"
              }
            },
            "required": [
              "value",
              "label"
            ]
          }
        }
      },
      "StatusOptions": {
        "type": "string",
        "enum": [
          "todo",
          "in-progress",
          "done",
          "cancelled",
          "backlog"
        ]
      }
    }
  }
}